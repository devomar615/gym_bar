import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:gym_bar/core/models/category.dart';import 'package:gym_bar/core/view_models/branch_model.dart';import 'package:gym_bar/core/view_models/category_model.dart';import 'package:gym_bar/core/view_models/product_model.dart';import 'package:gym_bar/ui/shared/dimensions.dart';import 'package:gym_bar/ui/widgets/custom_card_item.dart';import 'package:provider/provider.dart';class Categories extends StatelessWidget {  @override  Widget build(BuildContext context) {    CustomCardItem cardItem = CustomCardItem(context: context);    Dimensions _dimensions = Dimensions(context);    CategoryModel categoryModel = Provider.of<CategoryModel>(context);    List<Category> categories = categoryModel.categories;    ProductModel productModel = Provider.of<ProductModel>(context, listen: false);    var branch = Provider.of<BranchModel>(context).selectedBranch;    return Scaffold(        appBar: AppBar(          title: Text("اختر نوع المنتج"),        ),        body: categories == null            ? Center(child: CircularProgressIndicator())            : CustomScrollView(                slivers: <Widget>[                  SliverGrid(                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(crossAxisCount: 2),                    delegate: SliverChildBuilderDelegate(                      (BuildContext context, int index) {                        return categories.isEmpty                            ? Center(child: Text('لا يوجد منتجات هنا'))                            : Padding(                                padding: EdgeInsets.only(                                    left: _dimensions.widthPercent(1),                                    top: _dimensions.heightPercent(3),                                    right: _dimensions.widthPercent(1)),                                child: cardItem.item(                                    onPress: () {                                      productModel.fetchProductByCategoryName(                                          branchName: branch,                                          categoryName: categories[index].name);                                      Navigator.pushNamed(context, '/products');                                    },                                    assetImage: "assets/images/categories.jpeg",                                    title: categories[index].name),                              );                      },                      childCount: categories.length,                    ),                  ),                  SliverList(                    delegate: SliverChildListDelegate(                      [],                    ),                  ),                ],              ));  }}