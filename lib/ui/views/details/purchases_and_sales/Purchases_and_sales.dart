import 'package:flutter/material.dart';import 'package:gym_bar/core/enums.dart';import 'package:gym_bar/core/models/my_transaction.dart';import 'package:gym_bar/core/view_models/transaction_model.dart';import 'package:gym_bar/ui/shared/dimensions.dart';import 'package:gym_bar/ui/shared/text_styles.dart';import 'package:provider/provider.dart';class PurchasesAndSales extends StatelessWidget {  @override  Widget build(BuildContext context) {    TextStyles _textStyles = TextStyles(context: context);    Dimensions _dimensions = Dimensions(context);    TransactionModel transactionModel = Provider.of<TransactionModel>(context);    List<MyTransaction> transactions = transactionModel.filteredTransactions;    tableHead() {      return Container(        height: _dimensions.heightPercent(7),        color: Colors.blue,        child: Row(          mainAxisAlignment: MainAxisAlignment.spaceAround,          children: <Widget>[            GestureDetector(                onTap: () {                  transactionModel.onSortAmount();                },                child: Center(                    child: Row(                  mainAxisAlignment: MainAxisAlignment.center,                  children: <Widget>[                    Text("القيمة", style: _textStyles.tableTitleStyle()),                    SizedBox(width: _dimensions.widthPercent(3)),                    Icon(                      transactionModel.sortAmountIcon,                      size: _dimensions.heightPercent(3),                    )                  ],                ))),            SizedBox(              width: _dimensions.widthPercent(2),            ),            GestureDetector(                onTap: () {                  transactionModel.onSortHour();                },                child: Center(                    child: Row(                  mainAxisAlignment: MainAxisAlignment.center,                  children: <Widget>[                    Text("الساعة", style: _textStyles.tableTitleStyle()),                    SizedBox(width: _dimensions.widthPercent(3)),                    Icon(transactionModel.sortHourIcon, size: _dimensions.heightPercent(3))                  ],                ))),            if (transactionModel.isSales)              SizedBox(                width: _dimensions.widthPercent(2),              ),            if (transactionModel.isSales)              GestureDetector(                onTap: () {                  transactionModel.onSortName();                },                child: Center(                  child: Row(                    mainAxisAlignment: MainAxisAlignment.center,                    children: <Widget>[                      Text("اسم العميل", style: _textStyles.tableTitleStyle()),                      SizedBox(width: _dimensions.widthPercent(3)),                      Icon(transactionModel.sortNameIcon, size: _dimensions.heightPercent(3))                    ],                  ),                ),              ),          ],        ),      );    }    tableBuilder() {      return ListView.builder(        itemCount: transactions.length,        itemBuilder: (BuildContext context, int index) {          return Column(            children: <Widget>[              SizedBox(height: _dimensions.heightPercent(1)),              GestureDetector(                onTap: () {                  transactionModel.selectedTransaction = transactions[index];                  Navigator.pushNamed(context, '/selected_transaction');                },                child: Container(                  height: _dimensions.heightPercent(5),                  width: double.infinity,                  color: Colors.transparent,                  child: Row(                    mainAxisAlignment: MainAxisAlignment.spaceAround,                    children: <Widget>[                      Container(                        constraints: BoxConstraints(                          maxWidth: _dimensions.widthPercent(20),                        ),                        width: _dimensions.widthPercent(20),                        child: Text(                          transactions[index].transactionAmount == "" ? 'null' : transactions[index].transactionAmount,                          style: _textStyles.tableContentStyle(),                        ),                      ),                      Container(                        constraints: BoxConstraints(                          maxWidth: _dimensions.widthPercent(20),                        ),                        width: _dimensions.widthPercent(20),                        child: Text(                          transactions[index].hour,                          style: _textStyles.tableContentStyle(),                        ),                      ),                      if (transactionModel.isSales)                        SizedBox(                          width: _dimensions.widthPercent(2),                        ),                      if (transactionModel.isSales)                        Container(                          constraints: BoxConstraints(                            maxWidth: _dimensions.widthPercent(30),                          ),                          width: _dimensions.widthPercent(30),                          child: Text(                            transactions[index].customerName,                            style: _textStyles.tableContentStyle(),                          ),                        ),                    ],                  ),                ),              ),              SizedBox(height: _dimensions.heightPercent(1)),              Divider(height: 1, color: Colors.black),            ],          );        },      );    }    table() {      return Column(        children: <Widget>[          tableHead(),          Divider(            thickness: 3,            color: Colors.black54,            height: 3,          ),          Expanded(child: tableBuilder()),        ],      );    }    return Scaffold(      appBar: AppBar(        title: Text(transactionModel.isSales            ? "عمليات البيع يوم ${transactionModel.chosenDate}"            : "عمليات الشراء يوم ${transactionModel.chosenDate}"),      ),      body: transactionModel.status == Status.Busy          ? Center(child: CircularProgressIndicator())          : transactions == null              ? Center(child: CircularProgressIndicator())              : transactions.isEmpty                  ? Center(                      child: Text(                        "لم تتم اي معاملات في هذا اليوم",                        style: _textStyles.warningStyle(),                      ),                    )                  : Column(                      crossAxisAlignment: CrossAxisAlignment.stretch,                      children: <Widget>[                        SizedBox(height: _dimensions.heightPercent(1)),                        Expanded(child: table()),                      ],                    ),    );  }}