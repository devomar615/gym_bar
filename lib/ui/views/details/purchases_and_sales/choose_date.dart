import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:gym_bar/core/view_models/branch_model.dart';import 'package:gym_bar/core/view_models/transaction_model.dart';import 'package:gym_bar/provider_setup.dart';import 'package:gym_bar/ui/shared/dimensions.dart';import 'package:gym_bar/ui/shared/text_styles.dart';import 'package:gym_bar/ui/widgets/form_widgets.dart';import 'package:intl/intl.dart';import 'package:provider/provider.dart';class ChooseDate extends StatelessWidget {  @override  Widget build(BuildContext context) {    TextStyles _textStyles = TextStyles(context: context);    Dimensions _dimensions = Dimensions(context);    var branch = Provider.of<BranchModel>(context).selectedBranch;    // TransactionModel transactionModel =    //     Provider.of<TransactionModel>(context, listen: false);    // transactionModel.chosenDate =    //     DateFormat('yyyy-MM-dd').format(DateTime.now());    //todo: change purchase type using radio buttons.    String purchaseType = 'productBuying';    return Scaffold(      appBar: AppBar(        title: Consumer<TransactionModel>(          builder: (BuildContext context, transactionModel, Widget child) =>              Text(transactionModel.isSales ? "عمليات البيع" : "عمليات الشراء"),        ),      ),      body: Column(        children: [          SizedBox(height: _dimensions.heightPercent(11)),          //todo: add to UIHelper          Text(            'برجاء اختيار اليوم',            style: _textStyles.chooseDateTitleStyle(),          ),          SizedBox(height: _dimensions.heightPercent(5)),          //todo: add to UIHelper          Container(            height: _dimensions.heightPercent(35),            child: Consumer<TransactionModel>(              builder: (BuildContext context, transactionModel, _) => CupertinoDatePicker(                  mode: CupertinoDatePickerMode.date,                  initialDateTime: DateTime.parse(transactionModel.chosenDate),                  minimumDate: DateTime(1997, 1, 1),                  maximumDate: DateTime.now(),                  onDateTimeChanged: (DateTime newDateTime) {                    transactionModel.chosenDate = DateFormat('yyyy-MM-dd').format(newDateTime);                  }),            ),          ),          SizedBox(height: _dimensions.heightPercent(5)),          //todo: add to UIHelper          Consumer<TransactionModel>(            builder: (BuildContext context, transactionModel, Widget child) =>                FormWidget(context: context).formButtonTemplate(                    context: context,                    text: 'التالي',                    color: Colors.blue,                    onTab: () {                      var chosenDate = transactionModel.chosenDate == null                          ? DateFormat('yyyy-MM-dd').format(DateTime.now())                          : transactionModel.chosenDate;                      print(chosenDate);                      transactionModel.fetchTransactionByTypeAndDate(                          type: transactionModel.isSales ? "selling" : "buying",                          branchName: branch,                          date: transactionModel.chosenDate);                      Navigator.pushNamed(context, '/purchases_and_sales');                    }),          ),        ],      ),    );  }}