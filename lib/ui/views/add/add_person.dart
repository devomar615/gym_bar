import 'package:flutter/material.dart';import 'package:gym_bar/core/services/add_person_services.dart';import 'package:gym_bar/core/view_models/branch_model.dart';import 'package:gym_bar/ui/shared/dimensions.dart';import 'package:gym_bar/ui/widgets/add_person/employee_info.dart';import 'package:gym_bar/ui/widgets/add_person/person_choices.dart';import 'package:gym_bar/ui/widgets/add_person/person_general_info.dart';import 'package:provider/provider.dart';// ignore: must_be_immutableclass AddPerson extends StatelessWidget {  PageController _pageController = PageController();  @override  Widget build(BuildContext context) {    AddPersonServices addClientServices = Provider.of<AddPersonServices>(context);    Dimensions _dimensions = Dimensions(context);    var branchName = Provider.of<BranchModel>(context).selectedBranch;    final List<Widget> addProductCards = [      PersonGeneralInfo(),      PersonChoices(),    ];    _confirmAddProduct() => showDialog<void>(          context: context,          barrierDismissible: true,          // false = user must tap button, true = tap outside dialog          builder: (BuildContext dialogContext) {            return AlertDialog(              title: Text('تأكية إضافة المنتج'),              content: Text('اختر اتمام لاضافة المنتج الان'),              actions: <Widget>[                FlatButton(                  child: Text('الغاء'),                  onPressed: () {                    Navigator.of(dialogContext).pop(); // Dismiss alert dialog                  },                ),                FlatButton(                  child: Text('اتمام'),                  onPressed: () {                    Navigator.of(dialogContext).pop();                    // addProduct();                    addClientServices.clear();                  },                ),              ],            );          },        );    return GestureDetector(      onTap: () => FocusScope.of(context).requestFocus(FocusNode()),      child: Scaffold(        appBar: AppBar(          leading: IconButton(              icon: Icon(Icons.arrow_back),              onPressed: () {                Navigator.pop(context, true);                addClientServices.clear();                addClientServices.index = 0;              }),          actions: [            IconButton(              icon: Icon(Icons.clear_all),              onPressed: () {                addClientServices.clear();                FocusScope.of(context).requestFocus(FocusNode());              },            )          ],        ),        body: Column(          children: [            SizedBox(              height: 70,            ),            Center(              child: Container(                  height: _dimensions.heightPercent(50),                  width: _dimensions.widthPercent(95),                  child: PageView(                    physics: NeverScrollableScrollPhysics(),                    controller: _pageController,                    children: addProductCards,                  )),            ),            SizedBox(              height: 50,            ),            Row(              mainAxisAlignment: MainAxisAlignment.spaceEvenly,              children: [                RaisedButton(                  onPressed: () {                    FocusScope.of(context).requestFocus(FocusNode());                    addClientServices.index =                        addClientServices.index == 0 ? 0 : addClientServices.index - 1;                    print("sliding back");                    _pageController.animateToPage(                      addClientServices.index,                      duration: Duration(milliseconds: 200),                      curve: Curves.linear,                    );                  },                  child: Text("Previous"),                ),                addClientServices.index == 2                    ? RaisedButton(                        onPressed: () {                          print(addClientServices.index);                          _confirmAddProduct();                        },                        child: Text("Submit"),                      )                    : RaisedButton(                        onPressed: () {                          addClientServices.index =                              addClientServices.index == 2 ? 2 : addClientServices.index + 1;                          _pageController.animateToPage(                            addClientServices.index,                            duration: Duration(milliseconds: 300),                            curve: Curves.linear,                          );                        },                        child: Text("Next"),                      )              ],            )          ],        ),      ),    );  }}